[tool.poetry]
name = "spaczz"
version = "0.6.0a0"
description = "Adds fuzzy matching and additional regex matching support to spaCy."
license = "MIT"
readme = "README.md"
homepage = "https://github.com/gandersen101/spaczz"
repository = "https://github.com/gandersen101/spaczz"
keywords = ["fuzzy matching", "spacy", "nlp"]
authors = ["Grant Andersen <gandersen.codes@gmail.com>"]
documentation = "https://spaczz.readthedocs.io"

[tool.poetry.dependencies]
python = "^3.7"
spacy = "^3.0"
catalogue = "*"
importlib_metadata = {version = "*", python = "<3.8"}
numpy = [
    {version = ">=1.15, <1.22", python = "~3.7"},
    {version = ">=1.17.3", python = "~3.8"},
    {version = ">=1.19.3", python = "~3.9"},
    {version = ">=1.21.2", python = "^3.10"}
]
rapidfuzz = ">=1.0.0"
regex = ">=2020.6.8"
typing_extensions = "*"

[tool.poetry.dev-dependencies]
flake8 = "^5.0"
black = "^22.3"
pytest = "*"
coverage = {version = "*", extras = ["toml"]}
pytest-cov = "*"
flake8-black = "^0.3"
flake8-bugbear = "^22.4"
flake8-bandit = "^4.0"
safety = "*"
flake8-import-order = "^0.18"
mypy = ">=0.9, <1.0"
flake8-annotations = "^2.9"
flake8-docstrings = "^1.6"
darglint = "^1.8"
xdoctest = "^1.0"
sphinx = ">=4.0.2, <5.0"
rstcheck = "*"
sphinx-autodoc-typehints = "*"
sphinx-autobuild = "*"
codecov = "*"
ipykernel = "*"
isort = "^5.10"

[tool.poetry.plugins."spacy_factories"]
"spaczz_ruler" = "spaczz.pipeline:SpaczzRuler"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
fail_under = 97

[tool.coverage.run]
branch = true
source = ["spaczz"]

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
force_single_line = true
force_sort_within_sections = true
lexicographical = true
single_line_exclusions = ["typing"]
order_by_type = false
group_by_package = true
reverse_relative = true

[tool.mypy]

[[tool.mypy.overrides]]
module = [
    "catalogue",
    "regex",
    "srsly",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
